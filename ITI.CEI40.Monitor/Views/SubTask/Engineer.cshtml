@model List<SubTask>


<div class="row">
    <h3 class="text-muted m-3">Your Tasks</h3>
</div>

<div class="row ">

    <div id="leftSec" class="col-12">

        @if (Model != null && Model.Count() > 0)
        {
            <div style="border: 2px solid rgb(219, 219, 219) ; padding: 20px; border-radius: 8px;">
                <div class="table-responsive">
                    <table class="table table-hover text-center" id="Tasktable" style="width:100%;">
                        <thead class="tableh alert-primary">
                            <tr>
                                <th></th>
                                <th>Name</th>
                                <th>Project</th>
                                <th>Status</th>
                                <th class="remaining">Remaining Time</th>
                                <th>Progress</th>
                            </tr>
                        </thead>


                        <tbody>

                            @foreach (var item in Model)
                            {
                                <tr id="@item.Id" onclick="SelectRow(@item.Id)">

                                    <td>
                                        <input asp-for="@item.IsUnderWork" type="checkbox" data-toggle="toggle" data-size="xs"
                                               onchange="ChangeISUnderWork(@item.Id,this.checked)">
                                    </td>
                                    <td>@item.Name</td>
                                    <td>@item.Task.Project.Name</td>


                                    @if (item.Status == Status.OnHold)
                                    {
                                        <td>
                                            <button class="btn btn-sm btn-warning" onclick="ChangeStatus(event,@item.Id)"
                                                    onmouseover="StatusColor(event.target)"
                                                    onmouseout="StatusColor(event.target)">
                                                OnHold
                                            </button>
                                        </td>
                                    }
                                    else
                                    {
                                        <td>
                                            <button class="btn btn-sm btn-success" onclick="ChangeStatus(event,@item.Id)"
                                                    onmouseover="StatusColor(event.target)"
                                                    onmouseout="StatusColor(event.target)">
                                                Active
                                            </button>
                                        </td>
                                    }
                                    @*<select asp-for="@item.Status" asp-items="@Html.GetEnumSelectList<Status>()" class="form-control"></select>*@


                                    @{
                                        int remaining = (int)(item.EndDate - DateTime.Now).Value.TotalDays;


                                        if (remaining > 0)
                                        {
                                            <td class="remaining">@remaining day</td>
                                        }
                                        else
                                        {
                                            <td class="text-danger remaining">Time Ended</td>
                                        }
                                    }


                                    <td>
                                        <div class="progress">
                                            <div class="progress-bar" role="progressbar" style="width: @item.Progress%;" aria-valuenow="20" aria-valuemin="0" aria-valuemax="100">@item.Progress%</div>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        }
        else
        {
            <div style="border: 2px solid rgb(219, 219, 219) ; padding: 50px 25px;  border-radius: 8px;">
                <h4 class="text-muted text-center">You donot have tasks</h4>
            </div>
        }

    </div>
    <div id="rightSec">
    </div>
</div>


<!-- Button trigger modal -->
@*<button type="button" id="togleBtn" class="btn btn-primary d-none" data-toggle="modal" data-target="#exampleModal">
        Launch demo modal
    </button>*@


<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Submit Task</h5>
            </div>
            <div class="modal-body">
                <label>Comment</label>
                @*<input hidden id="status"/>
                    <input hidden id="taskId"/>*@
                <div>
                    <input id="reason" type="text" class="form-control" />
                    <button id="upload" type="button" class="btn btn-light"><i class="fas fa-arrow-circle-up"></i> Upload</button>
                </div>
            </div>
            <div class="modal-footer">
                <button id="close" type="button" class="btn btn-secondary" data-dismiss="modal" aria-label="Close">Close</button>
                <button id="send" type="button" class="btn btn-primary">Send</button>
            </div>
        </div>
    </div>
</div>

<!-- Hold Modal -->
<div class="modal fade" id="HoldModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Hold Reason</h5>
            </div>
            <div class="modal-body">
                <label>Reason</label>
                <input id="reason" type="text" class="form-control" />
            </div>
            <div class="modal-footer">
                <button id="close" type="button" class="btn btn-secondary" data-dismiss="modal" aria-label="Close">Close</button>
                <button id="send" type="button" class="btn btn-primary">Send</button>
            </div>
        </div>
    </div>
</div>




<!-- #endregion -->

@section Scripts{

    <link href="https://cdn.jsdelivr.net/gh/gitbrent/bootstrap4-toggle@3.6.1/css/bootstrap4-toggle.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/gh/gitbrent/bootstrap4-toggle@3.6.1/js/bootstrap4-toggle.min.js"></script>
    <script>



        function SelectRow(id) {
            $.ajax({
                type: "GET",
                url: `/Subtask/DisplayRow`,
                data: { ID: id },
                success: function (response) {
                    $('#rightSec').replaceWith(response)
                    $('#leftSec').removeClass('col-12')
                    $('.remaining').hide();
                    $('#leftSec').addClass('col-7')
                },
                error: function (x, y, err) {
                    console.log(arguments)
                }
            })
        }


        function ChangeProgress(id, value) {
            $.ajax({
                type: "GET",
                url: `/Subtask/EditProgress`,
                data: {
                    ID: id,
                    progress: value
                },
                success: function () {
                    var progresspar = document.getElementById(id).lastElementChild.firstElementChild.firstElementChild;
                    progresspar.style.width = `${value}%`;
                    progresspar.innerHTML = `${value}%`;
                },
                error: function (x, y, err) {
                    console.log(arguments)
                }
            })
        }



        //function SubmitSunTask() {
        //    $("#exampleModal").modal('show');
        //}






        function ChangeISUnderWork(id, value) {
            $.ajax({
                type: "GET",
                url: `/Subtask/EditIsUnderWork`,
                data: {
                    ID: id,
                    Is: value
                },
                success: function (response) {

                },
                error: function (x, y, err) {
                    console.log(arguments)
                }
            })
        }



        function ChangeStatus(event, Id) {
            debugger;
            event.stopPropagation();
            var element = event.target;
            var txtValue = element.innerText;


            $("#status").val(txtValue);
            $("#taskId").val(Id);
            $("#HoldModal").modal('show');
        }

        $('#send').click(function () {
            console.log($('#reason').val())//send reason in notification
            $("#exampleModal").modal('toggle');
        })

        //$('#send').click(function () {
        //debugger
        //var value;
        //var text = $('#reason').val()
        //$('#reason').val('');
        //let txtValue = $("#status").val();
        //let Id= $("#taskId").val();

        ////console.log(text)//send reason in notification

        //$("#exampleModal").modal('toggle');
        //switch (txtValue) {

        //    case 'Active':
        //        value = 0;
        //        element.classList.remove('btn-warning')
        //        element.classList.add('btn-success')
        //        element.innerText = 'Active'
        //        break;
        //    case 'OnHold':
        //        value = 1;
        //        element.classList.remove('btn-success')
        //        element.classList.add('btn-warning')
        //        element.innerText = 'OnHold'
        //        break;
        //}
        //$.ajax({
        //    type: "get",
        //    url: `/subtask/editstatus`,
        //    data: {
        //        id: Id,
        //        status: value
        //    },
        //    success: function (response) {
        //    },
        //    error: function (x, y, err) {
        //        console.log(arguments)
        //    }
        //})
        //})


        function StatusColor(element) {
            switch (element.innerText) {
                case 'OnHold':
                    element.classList.remove('btn-warning')
                    element.classList.add('btn-success')
                    element.innerText = 'Active'
                    break;
                case 'Active':
                    element.classList.remove('btn-success')
                    element.classList.add('btn-warning')
                    element.innerText = 'OnHold'
                    break;
            }
        }


                                    //(function () {

                                    //    var previous;
                                    //    $("select").on('focus', function () {
                                    //        // Store the current value on focus and on change
                                    //        previous = this.value;

                                    //    }).change(function () {

                                    //        var value = this.value;
                                    //        switch (value) {
                                    //            case '0': //Active
                                    //                if (confirm('Is the task Active?')) {
                                    //                    ChangeStatus(rowID, value);
                                    //                }
                                    //                break;

                                    //            case '1': //onhold

                                    //                $("#togleBtn").trigger("click");

                                    //                $('#send').click(function () {
                                    //                    if ($('#reason').val()) { //validation for empty rason
                                    //                        console.log($('#reason').val())//send reason in notification
                                    //                        $("#exampleModal").modal('toggle');
                                    //                        ChangeStatus(rowID, value);
                                    //                    }
                                    //                })

                                    //                $('#close').click(function () {
                                    //                    $(`#${rowID} > td > select`)[0].value = previous
                                    //                })

                                    //                break;

                                    //            case '2': // completed
                                    //                if (confirm('Is the task finished?')) {
                                    //                    $(`#${rowID}`).hide();
                                    //                    ChangeStatus(rowID, value);
                                    //                }
                                    //                else {
                                    //                    $(`#${rowID} > td > select`)[0].value = previous
                                    //                }
                                    //                break;

                                    //            case '3': //canceled
                                    //                if (confirm('Do you want to cancel this task?')) {
                                    //                    $(`#${rowID}`).hide();
                                    //                    ChangeStatus(rowID, value);
                                    //                }
                                    //                else {
                                    //                    $(`#${rowID} > td > select`)[0].value = previous
                                    //                }
                                    //                break;
                                    //        }

                                    //    });
                                    //})();
    </script>
}


@section Style{
    <link rel="stylesheet" href="~/css/progress.css" />
}
