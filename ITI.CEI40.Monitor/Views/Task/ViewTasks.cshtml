@model List<Activity>
@{
    ViewData["Title"] = "Team Leader";
}

<div id="mainPage">
    @*<input id="startDate"  type="text" class="form-control"><span class="input-group-addon"><i class="glyphicon glyphicon-th"></i></span>*@
    <div class="row">
        <h3 class="text-muted m-3">Tasks</h3>
    </div>

    <input type="number" hidden id="teamId" value="@ViewBag.TeamId" />
    <div id="tasksView">
        <div style="border: 2px solid rgb(219, 219, 219) ; padding: 20px; border-radius: 8px;">
            <table class="table table-hover text-center" id="teamTable">
                <thead class="tableh alert-info">
                    <tr>
                        <th scope="col">Task Name</th>
                        <th scope="col">Project</th>
                        <th scope="col">Priority </th>
                        <th scope="col">Start Date </th>
                        <th scope="col">Due Date </th>
                        <th scope="col">Progress</th>
                        <th scope="col">Status</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.Count(); i++)
                    {
                        <tr id="@Model[i].Id" onclick='displaySubTasks("@Model[i].Id")'>
                            <td>@Model[i].Name</td>

                            <td>@Model[i].Project.Name</td>
                            <td>@Model[i].Priority</td>
                            <td>@Model[i].StartDate.ToString("dd/MM/yyyy")</td>
                            <td>@Model[i].EndDate.ToString("dd/MM/yyyy")</td>
                            @if (@Model[i].Progress == 100)
                            {
                                <td> <button class="btn btn-success"> Submit</button></td>
                            }
                            else
                            {
                                <td><div class="progress"><div class="progress-bar" role="progressbar" style="width: @Model[i].Progress%;" aria-valuenow="20" aria-valuemin="0" aria-valuemax="100">@Model[i].Progress%</div></div></td>
                            }
                            <td>
                                @if (Model[i].Status == Status.OnHold)
                                {
                                    <div class="btn btn-warning hold"> OnHold </div>
                                }
                                else
                                {
                                    <button class="btn btn-success active" onclick="ChangeStatus(@Model[i].Id, this, event)"> Active</button>
                                }
                            </td>

                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
<div id="Board">
</div>


<!-- Add SubTask -->
<div class="modal fade" id="addSubTaskModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post" data-ajax-url="/SubTask/AddSubTask" data-ajax="true" data-ajax-method="Post" data-ajax-complete="addSubTask"
                  data-ajax-update="#tableBody" data-ajax-mode="after" id="SubTaskForm">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Add SubTask</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body" id="modalBody">
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">Add</button>
                    <button type="reset" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </form>
        </div>
    </div>
</div>


@* for comments // Omar *@

<!-- Button trigger modal -->
<button type="button" id="togleBtn" class="btn btn-primary d-none" data-toggle="modal" data-target="#exampleModal">
    Launch demo modal
</button>


<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Comment</h5>
            </div>
            <div class="modal-body">
                <input id="reason" type="text" class="form-control" />
            </div>
            <div class="modal-footer">
                <button id="close" type="button" class="btn btn-secondary" data-dismiss="modal" aria-label="Close">Close</button>
                <button id="send" type="button" class="btn btn-primary">Send</button>
            </div>
        </div>
    </div>
</div>


<!-- #endregion -->
@section scripts{
    <partial name="_ValidationScriptsPartial" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/js/bootstrap-datepicker.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive-ajax/dist/jquery.unobtrusive-ajax.js"></script>
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

    <script>
        function displaySubTasks(id) {
            $.ajax({
                url: "/SubTask/displaySubTasks",
                type: "Get",
                data: { taskId: `${id}` },
                success: function (result) {
                    if (result) {
                        $('#tasksView').hide();
                        $('#mainPage').append(result);
                    }
                }
            })
        }

        function BacktoList() {
            $('#subTaskView').remove();
            $('#tasksView').show();
        }

        


        function getSubTaskModal(TaskId) {
            $.ajax({
                url: "/SubTask/AddSubTask",
                type: "GET",
                data: { taskId: TaskId, teamId: $('#teamId').val() },
                success: function (res) {
                    $("#modalBody").append(res);
                    $('#addSubTaskModal').modal('show');
                }
            })
        }

        function addSubTask(result, status) {
            if (status == "success") {
                console.log(result);
                $('#addSubTaskModal').modal('hide');
                document.getElementById("SubTaskForm").reset();
                alert("SubTask added Successfully");
            }
            else {
                alert("Error While Adding SubTask");
                document.getElementById("SubTaskForm").reset();
            }
        }


        $('#addSubTaskModal').on('shown.bs.modal', function () {

            $('#startDate').datepicker({
                format: "dd/mm/yyyy",
                daysOfWeekDisabled: "5,6",
                todayHighlight: true,
                autoclose: true,
                clearBtn: true,
                startDate: new Date(),
                container: '#addSubTaskModal',
                datesDisabled: []
            }).on('changeDate', function (selected) {
                var minDate = new Date(selected.date.valueOf());
                $('#endDate').datepicker('setStartDate', minDate);
            });

            $('#endDate').datepicker({
                format: "dd/mm/yyyy",
                daysOfWeekDisabled: "5,6",
                todayHighlight: true,
                autoclose: true,
                clearBtn: true,
                startDate: $("#startDate").val(),
                container: '#addSubTaskModal',
                datesDisabled: []
            }).on('changeDate', function (selected) {
                var maxDate = new Date(selected.date.valueOf());
                $('#startDate').datepicker('setEndDate', maxDate);
            });
        });

        $('#addSubTaskModal').on('hidden.bs.modal', function () {
            $("#modalBody").empty();
        })



        function ChangeStatus(Id, value, event) {
            event.stopPropagation();
            $("#togleBtn").trigger("click");

            $('#send').click(function () {
                if ($('#reason').val()) { //validation for empty rason
                    console.log($('#reason').val())//send reason in notification
                    $("#exampleModal").modal('toggle');
                    $.ajax({
                        type: "GET",
                        url: `/Task/EditStatus`,
                        data: {
                            id: Id
                        },
                        success: function (response) {
                            console.log(value)
                            var btn = document.createElement('div')
                            btn.innerText = 'On Hold'
                            btn.classList.add('btn-warning')
                            btn.classList.add('btn')
                            value.replaceWith(btn)
                        },
                        error: function (x, y, err) {
                            console.log(arguments)
                        }
                    })
                }
            })
        }


        $('.active').mouseover(function () {
            this.classList.remove('btn-success');
            this.classList.add('btn-warning');
            this.innerText = 'On Hold';
        })
        $('.active').mouseleave(function () {
            this.classList.remove('btn-warning');
            this.classList.add('btn-success');
            this.innerText = 'Active';
        })

        ///Dashboard
        function Dashboard(id) {
            $.ajax({
                type: "GET",
                url: `/Task/Dashboard`,
                data: { taskId: id },
                success: function (response) {
                    //console.log(response)
                    $('#subTaskView').hide();
                    $('#Board').prepend(response);
                    LoadData();

                    //$('#Board').show();
                },
                error: function (x, y, err) {
                    console.log(arguments)
                }
            })
        }

        function LoadData() {
            //debugger;
            var ns = [];
            var ps = [];
            var dur = [];
            var names = $('.staskname')
            var progress = $('.staskprog')
            var durations = $('.staskdur')
            for (var i = 0; i < names.length; i++) {
                //console.log(names[i].defaultValue)
                ns.push(names[i].defaultValue)
            }
            for (var i = 0; i < progress.length; i++) {
                //console.log(progress[i].defaultValue)
                ps.push(progress[i].defaultValue)
            }
            for (var i = 0; i < durations.length; i++) {
                //console.log(progress[i].defaultValue)
                dur.push(durations[i].defaultValue)
            }
            console.log(ns);
            console.log(ps);
            console.log(dur);



            google.charts.load("current", { packages: ['corechart'] });
            google.charts.setOnLoadCallback(drawChart);
            google.charts.setOnLoadCallback(drawChart2);
            google.charts.setOnLoadCallback(drawChart3);


            function drawChart() {

                var data = new google.visualization.DataTable();
                data.addColumn('string', 'Name');
                data.addColumn('number', 'Progress');
                data.addColumn({ role: "style" });
                data.addRows([
                    [`${ns[0]}`, parseInt(ps[0]), "#4da76b"],
                ]);

                for (let j = 1; j < ns.length; j++) {
                    data.addRows([
                        [`${ns[j]}`, parseInt(ps[j]), "#4da76b"],
                    ]);
                }

                var options = {
                    title: "Tasks Progress",
                    hAxis: { textStyle: { bold: true } },
                    vAxis: { minValue: 0, maxValue: 100 },
                    animation: {
                        startup: true,
                        duration: 2500,
                        easing: 'in',
                    },
                    bar: { groupWidth: "70%" },
                    legend: { position: "none" },
                };
                var chart = new google.visualization.ColumnChart(document.getElementById("columnchart_values"));
                chart.draw(data, options);
            }

            function drawChart2() {
                var data = new google.visualization.DataTable();
                data.addColumn('string', 'Name');
                data.addColumn('number', 'Time Spent');

                data.addRows([
                    [`${ns[0]}`, parseInt(dur[0])],
                ]);

                for (let j = 1; j < ns.length; j++) {
                    data.addRows([
                        [`${ns[j]}`, parseInt(dur[j])],
                    ]);
                }

                var options = {
                    title: 'Tasks Actual Durations',
                    pieHole: 0.4,
                    //chartArea: { left: 20, top: 0, width: '50%', height: '75%' }
                    chartArea: { left: 150, height: '80%' }

                };

                var chart = new google.visualization.PieChart(document.getElementById('donutchart'));
                chart.draw(data, options);
            }

            function drawChart3() {
                var data = google.visualization.arrayToDataTable([
                    ['Year', 'Sales', 'Expenses'],
                    ['2013', 1000, 400],
                    ['2014', 1170, 460],
                    ['2015', 660, 1120],
                    ['2016', 1030, 540]
                ]);

                var options = {
                    title: 'Company Performance',
                    hAxis: { title: 'Year', titleTextStyle: { color: 'green' } },
                    vAxis: { minValue: 0 }
                };

                var chart = new google.visualization.AreaChart(document.getElementById('chart_div'));
                chart.draw(data, options);
            }
        }

        function Show(divName) {
            $(`#${divName}`).removeClass('d-none');
        }
        function Hide(divName) {
            $(`#${divName}`).addClass('d-none');
        }

        function BackToList3() {
            $('#DashBoard').remove();
            //$('#Board').hide();
            $('#subTaskView').show();
        }

        function BackToList2() {
            $('#notasks').remove();
            //$('#Board').hide();
            $('#subTaskView').show();
        }
    </script>
}
