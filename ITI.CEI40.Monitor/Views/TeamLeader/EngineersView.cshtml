@model SubTaskSubmitVM
@{
    ViewData["Title"] = "EngineersView";
}
<div>
    <div style="display:flex;justify-content:space-evenly">
        <div class="innerleft slice" style="width:30%; padding:50px 15px 15px 20px">
            <table class="table table-hover text-center" id="teamTable">
                <tbody>
                    @for (int i = 0; i < Model.teamMembers.Count(); i++)
                    {
                        if (Model.teamMembers[i].Id != Model.teamMembers.FirstOrDefault().Team.FK_TeamLeaderId && Model.teamMembers[i].Id != Model.teamMembers.FirstOrDefault().Team.Department.FK_ManagerID)
                        {
                            <tr id="@Model.teamMembers[i].Id" onclick='displaySubTasks("@Model.teamMembers[i].Id")'>
                                <td>@Model.teamMembers[i].UserName</td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>

        <div class="innerright slice" style="width:67%;padding:15px">
            <div class="row" id="tasks" style="margin:auto">
                <h4 id="alertdiv" class="text-muted text-center mt-5" style="margin:auto;">Select Engineer to Show Data</h4>
                <div id="tableBody" class="table table-hover">
                </div>
            </div>
        </div>

    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="SubmitModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title text-muted" id="exampleModalLabel">SubTask submittion</h5>
            </div>
            <div class="modal-body">
                <input id="subTaskid" hidden value="" name="ID" class="form-control" />
                <div class="form-group">
                    <label asp-for="Complexity"></label>
                    <input id="complex" name="Complexity" type="number" class="form-control" />
                </div>
                <div class="form-group">
                    <label asp-for="Quality"></label>
                    <input id="quality" type="number" name="Quality" class="form-control" />
                </div>
                <div class="form-group">
                    <label asp-for="TimeMangment"></label>
                    <input id="time" type="number" name="TimeMangment" class="form-control" />
                </div>
            </div>
            <div class="modal-footer">
                <button type="Button" onclick="AcceptSubmit()" class="btn btn-primary btn-sm">Submit</button>
                <button type="reset" class="btn btn-secondary btn-sm" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>




<!-- #endregion -->
@*<script src="script.js"></script>*@
@section scripts{
    <partial name="_ValidationScriptsPartial" />
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive-ajax/dist/jquery.unobtrusive-ajax.js"></script>


    <script>

        google.charts.load('current', { 'packages': ['corechart'] });
        //google.charts.setOnLoadCallback(drawChart);
        var ns = [];
        var ps = [];
        var flag = true;
        function drawChart() {
            var data = new google.visualization.DataTable();
            data.addColumn('string', 'Name');
            data.addColumn('number', 'Progress');

            data.addRows([
                [`${ns[0]}`, parseInt(ps[0])],
            ]);

            for (let j = 1; j < ns.length; j++) {
                data.addRows([
                    [`${ns[j]}`, parseInt(ps[j])],
                ]);
            }

            var options = {
                title: "Tasks in progress",
                width: 200,
                height: 150,
                bar: { groupWidth: "70%" },
                legend: { position: "none" },
            };
            var chart = new google.visualization.BarChart(document.getElementById("barchart_values"));
            chart.draw(data, options);
        }

        function deletesvg() {
            $('svg').remove();

        }

        function displayCharts(id) {
            $.ajax({
                url: "/TeamLeader/displayCharts",
                type: "Get",
                data: { engId: `${id}` },
                success: function (result) {
                    if (result) {
                        if (flag) {
                            $('#barchart_values').append(result);
                            var names = $('.staskname')
                            var progress = $('.staskprog')
                            for (var i = 0; i < names.length; i++) {
                                //console.log(names[i].defaultValue)
                                ns.push(names[i].defaultValue)
                            }
                            for (var i = 0; i < progress.length; i++) {
                                //console.log(progress[i].defaultValue)
                                ps.push(progress[i].defaultValue)
                            }
                            console.log(result)

                            drawChart();
                            flag = false;
                        }
                    }
                }
            })
        }



        function displaySubTasks(id) {
            $.ajax({
                url: "/TeamLeader/displaySubTasks",
                type: "Get",
                data: { engId: `${id}` },
                success: function (result) {
                    if (result) {
                        $('#alertdiv').hide();
                        $('#tableBody').empty();
                        $('#tableBody').append(result);
                    }
                }
            })
        }



        function SubmitModal(Id) {
            $("#SubmitModal").modal('show');
            $("#subTaskid").attr("value", Id)
            subTaskid = Id;
        }


        function submitSubTask() {
            console.log("Yes");
            $("#SubmitModal").modal('hide');
        }


        function AcceptSubmit() {
            let time = $("#time").val();
            let quality = $("#quality").val();
            let complexity = $("#complex").val();
            console.log(time);
            console.log(quality);
            console.log(complexity);
            $.ajax({
                url: "/teamleader/SubmitSubTask",
                type: "Post",
                data: {
                    ID: subTaskid,
                    Complexity: complexity,
                    Quality: quality,
                    TimeManagement: time
                },
                success: function (res) {
                    $("#SubmitModal").modal('hide');
                    $(`#${subTaskid}`).remove();
                }
            })
        }


        function Cancele(Id) {
            if (confirm('Do you want to cancel this task')) {
                $.ajax({
                    url: "/TeamLeader/CancelSubTask",
                    type: "Get",
                    data: {
                        id: Id,
                    },
                    success: function () {
                        $(`#${Id}`).hide();
                    }
                })
            }
        }
    </script>
}

@section Style{
    <style>
        .container {
            max-width: 1300px;
        }

        .slice {
            border: 0px solid white;
            border-radius: 8px;
            background: white;
            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
        }

        body {
            background-color: #eef5f0;
        }
    </style>
}