
@model ProjectViewModel
@{
    ViewData["Title"] = "Create Project";
}


<div id="MainView">

    <h3 class="text-muted">Projects</h3>
    <br>
    <!--#region Add project  -->
    <div class="d-flex mb-3">
        <span id="search" style="width:20% ; margin-right:1%;">
            <input class="form-control" type="search" placeholder="Search">
        </span>
        <span>
            <button class="btn btn-success " id="addproject">Add project</button>
            <button class="btn btn-light "><i class="fas fa-filter"></i>Filter</button>
            <button class="btn btn-light "><i class="fas fa-arrow-circle-up"></i> Archive</button>
        </span>
    </div>
    <!--#endregion   -->

    <div class="row">
        <div class="col-6">

            <!--#region Create Section  -->
            <div class=" d-none mb-3" id="createsection">
                <div style="width:50%; margin-right:2%">
                    <input asp-for="@Model.Project.Name" class="form-control"
                           type="text" id="projectName" placeholder="Enter the name of new project">
                    <span asp-validation-for="@Model.Project.Name" class="text-danger"></span>
                </div>

                <div>
                    <button class="btn btn-success" id="Createprojrct"> create new project </button>
                    <button class="btn alert-danger" id="cancel">Cancel</button>
                </div>
            </div>
            <!--#endregion -->
            <!--#region Table Section  -->
            <div id="projectsTable" style="border: 2px solid rgb(219, 219, 219) ;   border-radius: 8px;">

                @if (Model.Projects.Count<Project>() <= 0)
                {
                    <h4 id="noProject" style="padding:45px 20px " class="text-muted text-center">Create your first project </h4>
                }
                else
                {
                    <table class="table table-hover">
                        <tbody id="tablebody">
                            @foreach (var item in Model.Projects)
                            {
                                <tr id="@item.ID" onclick="OpenEditSec(@item.ID)">
                                    <td class="text-center font-weight-bold">@item.Name</td>
                                    <td style="text-align:right">
                                        <a href="/Activity/Index/@item.ID" class="btn alert-info" ><i id="i" class="fas fa-chart-area"></i> Chart</a>
                                        
                                        @if (item.EndDate != null)
                                        {
                                            <button onclick="Dashboard(@item.ID)" type="button" class="btn alert-warning">Dashboard</button>
                                        }
                                        else
                                        {
                                            <div class="btn-group dropleft">
                                                <button type="button" class="btn alert-warning " data-toggle="dropdown">
                                                    Dashboard
                                                </button>
                                                <div class="dropdown-menu px-2 mx-1 alert-danger">
                                                    Lets goto charts and create tasks
                                                </div>
                                            </div>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
            </div>
            <!--#endregion -->
        </div>


        <div id="formSec" class="col-6">
            <!--#region Form Section  -->
            <div style="border: 2px solid rgb(219, 219, 219) ; padding: 50px 25px;  border-radius: 8px;">
                <h4 class="text-muted text-center">Choose project to edit</h4>
            </div>
            <!--#endregion -->
        </div>
    </div>
</div>


<div id="Board">
</div>




@section Scripts{

    <partial name="_ValidationScriptsPartial" />
    <script src="~/lib/jquery-validation-unobtrusive-ajax/dist/jquery.unobtrusive-ajax.js"></script>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>


    <script>

        //open form for add name of project
        var btn = $('#addproject').click(function () {
            $('#addproject').hide();
            $('#createsection').addClass("d-flex");
            $('#search').css('width', '30%');
        })

        //this function is called after add new project also
        function CloseProjrctNameSec() {
            $('#addproject').show();
            $('#createsection').removeClass("d-flex");
            $('#search').css('width', '20%');
        }
        $('#cancel').click(CloseProjrctNameSec)


        //Add Ajax
        $('#projectName').keypress(function (event) {
            var keyCode = (event.keyCode ? event.keyCode : event.which);
            if (keyCode == '13') {
                Add()
            }
        })

        $('#Createprojrct').click(Add);
        function Add() {
            var pName = $('#projectName').val();
            if (pName) {
                $.ajax({
                    type: "POST",
                    url: `/Project/Add`,
                    data: { Name: pName },
                    success: function (response) {
                        $('#tablebody').append(
                            `<tr id="${response.id}" onclick="Edit(${response.id})">
                                                                                    <td class="text-center font-weight-bold">${response.name}</td>
                                                                                    <td style="text-align:right">
                                                                                    <a href="/Activity/Index/${response.id}" class="btn alert-info" ><i id="i" class="fas fa-chart-area"></i> Chart</a>
                                                                                    <div class="btn-group dropleft">
                                                        <button type="button" class="btn alert-warning " data-toggle="dropdown" >
                                                            Dashboard
                                                        </button>
                                                        <div class="dropdown-menu px-2 alert-danger">
                                                            Lets goto charts and create tasks
                                                        </div>
                                                    </div>
                                                                            </tr>`
                        );
                        //For first time if there is no project in the table (Hide the sec of No Project is created)
                        $('#noProject').hide();
                        pName = '';
                        CloseProjrctNameSec();
                        OpenEditSec(response.id)
                    },
                    error: function (x, y, err) {
                        console.log(arguments)
                    }
                });
            }
        }



        ////Edit AJAX
        //function Edit(projectId) {
        //    switch (event.target.tagName) {
        //        case 'SPAN':
        //        case 'I':
        //            location.href = "/Activity/Index/" + projectId;
        //            break;
        //            case 'BUTTON':
        //               Dashboard(projectId);
        //            break;
        //        default:
        //            OpenEditSec(projectId);
        //    }
        //}


        //Open the right window which contain the form
        //this function is called from (Edit function , Add function)
        function OpenEditSec(projectId) {
            $.ajax({
                type: "GET",
                url: `/Project/Edit`,
                data: { id: projectId },
                success: function (response) {
                    $('#formSec').replaceWith(response)
                },
                error: function (x, y, err) {
                    console.log(arguments)
                }
            })
        };



        //Submit form ajax
        function SubmitForm(event) {
            event.preventDefault();
            $.ajax({
                type: 'POST',
                url: `/project/Edit/`,
                data: $('#projectForm').serialize(),
                success: function (data) {
                    document.getElementById(`${data.id}`).firstElementChild.innerHTML = data.name;
                },
                error: function (x, y, err) {
                    alert("Project name must be entered")
                },
            });
        };

        function EditName(result) {
            console.log(result)
            //document.getElementById(`${data.id}`).firstElementChild.innerHTML = data.name;
        }



        //-----------Dash-------------//



        function Dashboard(id) {
            $.ajax({
                type: "GET",
                url: `/Project/DashBoard`,
                data: { projId: id },
                success: function (response) {
                    $('#MainView').hide();
                    $('#Board').prepend(response);
                    LoadData();

                    //$('#Board').show();
                },
                error: function (x, y, err) {
                    console.log(arguments)
                }
            })
        }

        function BackToList() {
            $('#DashBoard').remove();
            //$('#Board').hide();
            $('#MainView').show();
        }

        ////
        function LoadData() {
            debugger;
            var ns = [];
            var ps = [];
            var dur = [];
            var names = $('.staskname')
            var progress = $('.staskprog')
            var durations = $('.staskdur')
            for (var i = 0; i < names.length; i++) {
                //console.log(names[i].defaultValue)
                ns.push(names[i].defaultValue)
            }
            for (var i = 0; i < progress.length; i++) {
                //console.log(progress[i].defaultValue)
                ps.push(progress[i].defaultValue)
            }
            for (var i = 0; i < durations.length; i++) {
                //console.log(progress[i].defaultValue)
                dur.push(durations[i].defaultValue)
            }
            console.log(ns);
            console.log(ps);
            console.log(dur);



            google.charts.load("current", { packages: ['corechart'] });
            google.charts.setOnLoadCallback(drawChart);
            google.charts.setOnLoadCallback(drawChart2);
            google.charts.setOnLoadCallback(drawChart3);


            function drawChart() {

                var data = new google.visualization.DataTable();
                data.addColumn('string', 'Name');
                data.addColumn('number', 'Progress');
                data.addColumn({ role: "style" });
                data.addRows([
                    [`${ns[0]}`, parseInt(ps[0]), "#4da76b"],
                ]);

                for (let j = 1; j < ns.length; j++) {
                    data.addRows([
                        [`${ns[j]}`, parseInt(ps[j]), "#4da76b"],
                    ]);
                }

                var options = {
                    title: "Tasks Progress",
                    hAxis: { textStyle: { bold: true } },
                    vAxis: { minValue: 0, maxValue: 100 },
                    animation: {
                        startup: true,
                        duration: 2500,
                        easing: 'in',
                    },
                    bar: { groupWidth: "70%" },
                    legend: { position: "none" },
                };
                var chart = new google.visualization.ColumnChart(document.getElementById("columnchart_values"));
                chart.draw(data, options);
            }

            function drawChart2() {
                var data = new google.visualization.DataTable();
                data.addColumn('string', 'Name');
                data.addColumn('number', 'Time Spent');

                data.addRows([
                    [`${ns[0]}`, parseInt(dur[0])],
                ]);

                for (let j = 1; j < ns.length; j++) {
                    data.addRows([
                        [`${ns[j]}`, parseInt(dur[j])],
                    ]);
                }

                var options = {
                    title: 'Tasks Actual Durations',
                    pieHole: 0.4,
                    //chartArea: { left: 20, top: 0, width: '50%', height: '75%' }
                    chartArea: { left: 150, height: '80%' }
                };

                var chart = new google.visualization.PieChart(document.getElementById('donutchart'));
                chart.draw(data, options);
            }


            function drawChart3() {

                var data = new google.visualization.DataTable();
                data.addColumn('number', 'Day');
                data.addColumn('number', 'Guardians of the Galaxy');
                data.addColumn('number', 'The Avengers');
                data.addColumn('number', 'Transformers: Age of Extinction');

                data.addRows([
                    [1, 37.8, 80.8, 41.8],
                    [2, 30.9, 69.5, 32.4],
                    [3, 25.4, 57, 25.7],
                    [4, 11.7, 18.8, 10.5],
                    [5, 11.9, 17.6, 10.4],
                    [6, 8.8, 13.6, 7.7],
                    [7, 7.6, 12.3, 9.6],
                    [8, 12.3, 29.2, 10.6],
                    [9, 16.9, 42.9, 14.8],
                    [10, 12.8, 30.9, 11.6],
                    [11, 5.3, 7.9, 4.7],
                    [12, 6.6, 8.4, 5.2],
                    [13, 4.8, 6.3, 3.6],
                    [14, 4.2, 6.2, 3.4]
                ]);

                var options = {
                    chart: {
                        title: 'Box Office Earnings in First Two Weeks of Opening',
                        subtitle: 'in millions of dollars (USD)'
                    },
                    width: 900,
                    height: 500,
                    axes: {
                        x: {
                            0: { side: 'top' }
                        }
                    }
                };

                var chart = new google.charts.Line(document.getElementById('line_top_x'));

                chart.draw(data, google.charts.Line.convertOptions(options));
            }
        }
        function Show(divName) {
            $(`#${divName}`).removeClass('d-none');
        }
        function Hide(divName) {
            $(`#${divName}`).addClass('d-none');
        }
    </script>
}


