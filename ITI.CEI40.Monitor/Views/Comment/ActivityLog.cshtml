@model List<SubTask>

@{
    ViewData["Title"] = "Comments";
}


<div>
    <div class="row upper-container" style="cursor:pointer">
        <div class="col upper-icon " style="display:flex;align-items:center; justify-content:center;">
            <h4 class="text-muted">@Model[0].Task.Name</h4>
        </div>

        <div class="col upper-icon">
            <time class="icon">
                <em>@Model[0].Task.StartDate.DayOfWeek</em>
                <strong>@Model[0].Task.StartDate.ToString("MMMM") </strong>
                <span>@Model[0].Task.StartDate.Day</span>
            </time>
        </div>

        <div class="col upper-icon">
            <time class="icon ">
                <em style="color:rgb(179, 20, 20)">@Model[0].Task.EndDate.DayOfWeek</em>
                <strong style="background-color: rgb(179, 20, 20);
                    border-bottom: 1px dashed #1f0203;
                                 box-shadow: 0 2px 0 rgb(179, 20, 20);">@Model[0].Task.EndDate.ToString("MMMM") </strong>
                                <span>@Model[0].Task.EndDate.Day</span>
                            </time>
                        </div>
                        <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                            @{ int filesNum = 0;}
                            @foreach (var item in Model)
                            {
                                foreach (var comment in item.Comments)
                                {
                                    if (comment.File != null)
                                    {
                                        filesNum += 1;
                                        <div style="margin: 0 .3em 1em 1.5em;">
                                            <div class="">@comment.Sender.UserName</div>
                                            <div class="ml-2">
                                                <a href="~/files/@comment.File.FilePath" download="@comment.File.FilePath.Split("_")[1]">
                                                    @comment.File.FilePath.Split("_")[1]
                                                </a>
                                            </div>
                                            <div class="message-time">@comment.commentTime</div>
                                        </div>
                                    }
                                }
                            }
                        </div>
                        <div class="col " style="display:flex;align-items:center; justify-content:center;"
                             data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            <h4 class="text-muted text-center">@filesNum Files</h4>
                        </div>
                    </div>
                    <div class="row lower-container">

                        <div class="col-6 task-container">
                            <div>
                                <div class="text-muted" style="position:absolute;border:0 solid #e6f5ea;border-radius:0 0 7px 7px;margin-left:30px;background:#e6f5ea;padding:5px 20px;font-size:22px;display:inline-flex">Departement Manager</div>
                                <div style="overflow-y:auto;background-color:white ;height:15em;padding:3em 0 0 0;border:0 solid;border-radius:10px 10px 0 0">
                                    <div id="depManComment">
                                        @foreach (var item in Model[0].Task.Comments)
                                        {
                                            <partial name="_CommentPartial" model="item" />
                                        }
                                    </div>
                                </div>
                            </div>
                            <div style="padding:.4em; display:flex; justify-content:space-between; background-color:var(--green) ;border: 0 solid var(--green);border-radius: 0 0 10px 10px;">
                                <textarea id="commentArea" class="form-control " placeholder="Add Comment Here..."></textarea>
                                <div style="align-items:center; display:flex; justify-content:space-between">
                                    <button class="btn btn-sm mx-2 " type="button" id="AddFile" style="font-size:20px;color:white" onclick="AddFile(@Model[0].Task.Id,0,'depManComment')"><i class="fas fa-paperclip "></i></button>
                                    <button class="btn btn-sm " type="button" id="AddComment" style="font-size:20px; color:white" onclick="AddComment(@Model[0].Task.Id,'depManComment')"><i class="fas fa-paper-plane "></i></button>
                                </div>
                            </div>
                        </div>
                        <div class="col-6 task-container">
                            <div style="height:19.7rem;background-color:white;border:0px solid white ;border-radius:10px ;">
                                <div class="text-muted" style="position:absolute;border:0 solid #e6f5ea;border-radius:0 0 7px 7px;margin-left:30px;background:#e6f5ea;padding:5px 20px;font-size:22px;display:inline-flex">Task Story</div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="lower-container row">

                    @for (int i = 0; i < Model.Count(); i++)
                    {
                        <div class="col-6 task-container">
                            <div>
                                @if (Model[i].Status == Status.OnHold)
                                {
                                    <div style="position:absolute;border:0 solid #ffc107;border-radius:0 0 7px 7px;margin-left:30px;background:#ffc107;padding:3px 10px;font-size:20px;display:inline-flex" onmouseover="display(@Model[i].Id,'@("subtaskComments" + Model[i].Id)')" onmouseout="hide(@Model[i].Id, '@("subtaskComments" + Model[i].Id)')">@Model[i].Name</div>
                                }
                                else
                                {
                                    <div class="text-muted" style="position:absolute;border:0 solid #e6f5ea;border-radius:0 0 7px 7px;margin-left:30px;background:#e6f5ea;padding:3px 10px;font-size:20px;display:inline-flex" onmouseover="display(@Model[i].Id,'@("subtaskComments" + Model[i].Id)')" onmouseout="hide(@Model[i].Id, '@("subtaskComments" + Model[i].Id)')">@Model[i].Name</div>
                                }
                                <div style="height:15em;background:white; overflow-y:auto;padding:3em 0 0 0;border: 0 solid ;border-radius:10px 10px 0 0;">
                                    <div id='@("subtaskComments"+Model[i].Id)'>
                                        @foreach (var comment in Model[i].Comments)
                                        {
                                            <partial name="_CommentPartial" model="comment" />
                                        }
                                    </div>
                                </div>

                                <div id="@Model[i].Id" class="d-none">
                                    <section>
                                        <div class="single-chart">
                                            <svg viewbox="0 0 36 36" class="circular-chart blue">
                                                <path class="circle-bg"
                                                      d="M18 2.0845
                                    a 15.9155 15.9155 0 0 1 0 31.831
                                    a 15.9155 15.9155 0 0 1 0 -31.831" />
                                                <path class="circle"
                                                      stroke-dasharray="@Model[i].Progress, 100"
                                                      d="M18 2.0845
                                  a 15.9155 15.9155 0 0 1 0 31.831
                                  a 15.9155 15.9155 0 0 1 0 -31.831" />
                                                <text x="18" y="20.35" class="percentage">@Model[i].Progress%</text>
                                            </svg>
                                        </div>
                                    </section>

                                    <div style="position:absolute; left:20rem; top:4rem">
                                        <img src="~/img/duration.png" width="58%" />
                                    </div>


                                    <div class="rounded-circle" style="position: absolute; left: 22.2rem;top: 6.7rem;font-size:3em; width:1.5em;height:1.5em;background:white;display:flex;justify-content:center;align-items:center">
                                        @Model[i].ActualDuration <span class="text-muted" style="font-size:25px">h</span>
                                    </div>

                                </div>
                                <div style="padding:.4em; display:flex; justify-content:space-between; background-color:var(--green) ;border: 0 solid var(--green);border-radius: 0 0 10px 10px;">
                                    <textarea class="form-control " placeholder="Add Comment Here..." id=@("subComment"+Model[i].Id)></textarea>
                                    <div style="align-items:center; display:flex; justify-content:space-between">
                                        <button class="btn btn-sm mx-2 " type="button" style="font-size:20px;color:white" onclick="AddFile(@Model[i].FK_TaskId,@Model[i].Id,'@("subtaskComments" + Model[i].Id)')"><i class="fas fa-paperclip"></i></button>
                                        <button class="btn btn-sm " type="button" style="font-size:20px; color:white" onclick="AddsubComment(@Model[i].Id,@Model[i].FK_TaskId,'@("subtaskComments" + Model[i].Id)')"><i class="fas fa-paper-plane"></i></button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>


                <!-- File Modal -->
                <div class="modal fade" id="FileModal" tabindex="-1" role="dialog" aria-labelledby="FileModalLabel" aria-hidden="true">
                    <div class="modal-dialog" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="FileModalLabel">Files</h5>
                            </div>
                            <form id="fileForm" enctype="multipart/form-data" method="post">
                                <div class="modal-body">
                                    <label>Upload File</label>
                                    <div class="custom-file">
                                        <input name="file" class="form-control custom-file-input" type="file" />
                                        <label class="custom-file-label">Choose File...</label>
                                    </div>
                                    <input id="task_Id" name="taskId" value="" hidden />
                                    <input id="subTask_Id" name="subTaskId" value="" hidden />
                                </div>
                                <div class="modal-footer">
                                    <button id="close" type="button" class="btn btn-secondary" data-dismiss="modal" aria-label="Close">Close</button>
                                    <button onclick="uploadFile()" type="button" class="btn btn-primary">Upload</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>




                @section Scripts{

                    <script>

                        function display(id, i) {
                            $(`#${i}`).addClass('d-none')
                            $(`#${id}`).removeClass('d-none')
                        }

                        function hide(id, i) {
                            $(`#${id}`).addClass('d-none')
                            $(`#${i}`).removeClass('d-none')
                        }



                        //-----------Add Description
                        function updateDesc(taskId) {
                            $.ajax({
                                url: "/Task/AddTaskDesc",
                                type: "Post",
                                data: { taskId: taskId, taskDesc: $("#taskDesc").val() },
                                success: function (result) {
                                    $('#tableBody').empty();
                                    $('#tableBody').prepend(result);
                                },
                                error: function (x, y, err) {
                                    console.log(err);
                                }
                            })
                        }

                        //-------------Add File and Comments for Dept Manager

                        function AddFile(taskId, SubTaskId, divId) {
                            targetDiv = $(`#${divId}`);
                            $('#task_Id').attr("value", taskId);
                            if (SubTaskId == 0) {
                                isTaskCheck = 'true'
                            }
                            else {
                                isTaskCheck = 'false'
                                $('#subTask_Id').attr("value", SubTaskId);
                            }
                            isHighLevel = false
                            $('#isHighLevelBool').attr("value", isHighLevel);
                            $('#FileModal').modal('show');
                            console.log(isTaskCheck);
                        }

                        $('input[type="file"]').change(function (e) {
                            fileName = e.target.files[0].name;
                            $(".custom-file-label").html(fileName);
                        });

                        function uploadFile() {
                            let URL;
                            if (isTaskCheck == 'true') { URL = `/comment/AddFileForTask?isHighLevel=` + `${isHighLevel}`; }
                            else { URL = "/comment/AddFileForSubTask"; }
                            console.log(URL);
                            let form = $('#fileForm')[0];
                            let data = new FormData(form);
                            console.log(form);
                            console.log(data);
                            if (fileName) {
                                $.ajax({
                                    type: 'post',
                                    url: URL,
                                    processData: false,  // Important!
                                    contentType: false,
                                    cache: false,
                                    data: data,
                                    success: function (response) {
                                        $("#FileModal").modal('hide');
                                        targetDiv.prepend(response);
                                    }
                                })
                            }
                        }


                        $('#FileModal').on('hidden.bs.modal', function (e) {
                            $(".custom-file-label").html("");
                        });


                        function AddComment(taskId, divId) {
                            targetDiv = $(`#${divId}`);
                            console.log(targetDiv);
                            let comment = $('#commentArea').val();
                            isHighLevel = false
                            console.log(isHighLevel);
                            if (comment) {
                                $.ajax({
                                    type: "Post",
                                    url: `/Comment/AddCommentForTask/`,
                                    data: {
                                        comment: comment,
                                        taskId: taskId,
                                        isHighLevel: isHighLevel
                                    },
                                    success: function (res) {
                                        $('#commentArea').val("");
                                        targetDiv.prepend(res);
                                        console.log(res);
                                    },
                                    error: function (x, y, err) {
                                        console.log(err);
                                    }
                                })
                            }
                        }

                        //---------Add File and  Comment To SubTask Thread-------//


                        function AddsubComment(subTaskId, taskId, divId) {
                            targetDiv = $(`#${divId}`);
                            console.log(targetDiv);
                            let comment = $(`#subComment${subTaskId}`);
                            console.log(comment);
                            $.ajax({
                                type: "Post",
                                url: `/Comment/AddCommentForSubTask`,
                                data: {
                                    subTaskId: subTaskId,
                                    taskId: taskId,
                                    comment: comment.val()
                                },
                                success: function (res) {
                                    comment.val("");
                                    targetDiv.prepend(res);
                                },
                                error: function (x, y, err) {
                                    console.log(err);
                                }

                            })
                        }


                    </script>
                }






                @section Style{
                    <style>
                        .message-text {
                            padding: 20px, 14px;
                            font-size: 1rem;
                        }

                        .message-time {
                            font-size: .8rem;
                            color: #777;
                            margin: 4px 0 0 2px;
                        }

                        /* Time */

                        time.icon {
                            font-size: 1em; /* change icon size */
                            display: block;
                            position: relative;
                            width: 5em;
                            height: 5em;
                            background-color: #fff;
                            margin: .4em auto;
                            border-radius: 0.6em;
                            box-shadow: 0 1px 0 #bdbdbd, 0 2px 0 #fff, 0 3px 0 #bdbdbd, 0 4px 0 #fff, 0 5px 0 #bdbdbd, 0 0 0 1px #bdbdbd;
                            overflow: hidden;
                        }

                            time.icon * {
                                display: block;
                                width: 100%;
                                font-size: 0.9em;
                                font-weight: bold;
                                font-style: normal;
                                text-align: center;
                            }

                            time.icon strong {
                                position: absolute;
                                top: 0;
                                padding: 0.1em 0;
                                color: #fff;
                                background-color: var(--green);
                                border-bottom: 1px dashed #154826;
                                box-shadow: 0 2px 0 var(--green);
                            }

                            time.icon em {
                                position: absolute;
                                bottom: 0.3em;
                                color: var(--green);
                            }

                            time.icon span {
                                width: 100%;
                                font-size: 1.7em;
                                letter-spacing: -0.05em;
                                padding-top: 0.8em;
                                color: #2f2f2f;
                            }


                        /*My*/

                        .upper-container {
                            background-color: #e6f5ea;
                            margin-top: 7rem;
                            padding: 7px;
                            border: 0 solid #e6f5ea;
                            border-radius: 12px;
                        }

                        .lower-container {
                            background-color: #e6f5ea;
                            margin-top: 20px;
                            border: 0 solid #e6f5ea;
                            border-radius: 12px;
                        }

                        .upper-icon {
                            border-right: 2px solid #cce2d3;
                        }

                        .Eng-Name {
                            font-size: 1.3em;
                            border-bottom: 1px solid black;
                            margin: .2em 0em 0em .4em;
                        }

                        .sub-name {
                            background-color: var(--green);
                            height: 3rem;
                            display: flex;
                            align-items: center;
                            justify-content: center;
                            border: 1px solid var(--green);
                            border-radius: 0 0 10px 10px;
                            font-size: 1.4em;
                            color: white;
                            transition: .8s;
                        }


                        .task-container {
                            margin: 1.2rem 0 1.2rem 0;
                            cursor: pointer;
                        }

                        section {
                            width: 30em;
                            position: absolute;
                            z-index: 1;
                            left: 55px;
                            top: 63px;
                        }

                        .dropdown-menu {
                            max-height: 25rem;
                            width: 17.7rem;
                            overflow-y: auto;
                        }
                    </style>
                    <link rel="stylesheet" href="~/css/circle.css" />
                }








